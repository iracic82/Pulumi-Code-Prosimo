"""A Python Pulumi program"""

import pulumi
import json
from pulumi_aws import Provider
from infrastructure_module import AwsInfrastructure  # Assuming the class is defined in another file
from infrastructure_module import AzureInfrastructure

# Load the configuration data
with open('config.json') as config_file:
    config_data = json.load(config_file)
with open('azure_config.json', 'r') as file:
    config = json.load(file)
class MainProgram:
    def __init__(self):
        for region, vpcs in config_data.items():
            print(region)
            aws_provider = Provider('aws-provider', region=region)
            
            for vpc_name, vpc_config in vpcs.items():
                AwsInfrastructure(f'aws-infra-{region}-{vpc_name}',
                                  aws_vpc_cidr=vpc_config['aws_vpc_cidr'],
                                  subnets=vpc_config['subnets'],
                                  key_pair_name=vpc_config['aws_ec2_key_pair_name'],
                                  instance_type='t2.micro',  # Example instance type
                                  user_data_path='./aws.sh',
                                  opts=pulumi.ResourceOptions(provider=aws_provider))
        for region, vnets in config.items():
            azure_probider = Provider('azure-provider', region=region)
            for vnet_name, vnet_config in config['ABinBEV_Azure_VNET'].items():
    # Create Azure infrastructure for each VNET
                azure_infra = AzureInfrastructure(
     	        name=vnet_name,
                resource_group_name=vnet_config['azure_resource_group'],
                location="East US",  # Assuming location is constant; modify as needed
                vnet_name=vnet_config['azure_vnet_name'],
                vnet_cidr=vnet_config['azure_vnet_cidr'],
                subnets=vnet_config['subnets'],
                nsg_name=vnet_config['nsg_name'],
                vm_size=vnet_config['azure_vm_size'],
                vm_name=vnet_config['azure_instance_name'],
                ssh_key_name=vnet_config['azure_server_key_pair_name'],
                user_data_path="path_to_your_user_data_script",  # Specify the path to your user data script
                opts=pulumi.ResourceOptions(provider=azure_provider))
    
main_program = MainProgram()


